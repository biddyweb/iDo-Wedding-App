CsvImport
=========

This Rails plugin

It provides a controller method called each_csv_row and
an accompanying helper called csv_form.

By default, when each_csv_row is called, any exceptions raised in the
block will be rescued. The rows that triggered the exceptrions will
then be displayed in a table as part of the output from csv_form.

You can turn off rescuing by calling each_csv_row(false).

Example
=======

# app/controllers/employees_controller.rb
class EmployeesController < ActionController::Base
  include CsvImport
    
  def import_employee_records
    each_csv_row do |row|
	  if params.has_key?('destroy_all_first')
	    Employee.destroy_all
	  end
      Employee.create!(:first_name => row[0], :last_name => row[1])
    end
  end
end

# app/views/employees/import_employee_records.html.erb

<h1>Import Employee Records</h1>

<% csv_form %> do
  
  <!-- whatever you put in the optional
  block will appear at the end of the form -->
  
  <p>
    <%= checkbox_tag :destroy_all_first %>
	<%= label :destroy_all_first, 'Destroy existing records first?' %>
  </p>
end

Todo
====

Add support for calling csv_form within the context of another form, e.g.:

<% form_for @employee do |f| %>
  <!-- your form fields -->
  
  <% csv_form %>
<% end %>